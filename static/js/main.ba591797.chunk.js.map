{"version":3,"sources":["App.js","index.js"],"names":["App","useState","isLoading","setIsLoading","person","setPerson","title","setTitle","value","setValue","getPerson","a","fetch","response","json","data","console","log","results","phone","email","image","picture","large","password","login","name","first","last","age","dob","location","street","number","country","newPerson","handleValue","e","target","classList","contains","newValue","dataset","label","useEffect","className","src","alt","onMouseOver","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAsHeA,MA1Gf,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,QAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAS,iBAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAG,4DAAAC,EAAA,sEACOC,MAVf,8BASQ,cACVC,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,GAENX,EAASW,EAAKG,QAAQ,GACpBC,EAAiBf,EAAjBe,MAAOC,EAAUhB,EAAVgB,MACAC,EAAUjB,EAAOkB,QAAxBC,MACAC,EAAapB,EAAOqB,MAApBD,SARQ,EASQpB,EAAOsB,KAAvBC,EATQ,EASRA,MAAOC,EATC,EASDA,KACPC,EAAQzB,EAAO0B,IAAfD,IAVQ,EAcZzB,EAAO2B,SAdK,IAYdC,OAAUC,EAZI,EAYJA,OAAQP,EAZJ,EAYIA,KAClBQ,EAbc,EAadA,QAGIC,EAAY,CAChBd,QACAF,QACAC,QACAI,WACAK,MACAG,OAAO,GAAD,OAAKC,EAAL,YAAeP,EAAf,aAAwBQ,GAC9BR,KAAK,GAAD,OAAKC,EAAL,YAAcC,IAGpBvB,EAAU8B,GACVhC,GAAa,GACbI,EAAS,QACTE,EAAS0B,EAAUT,MA7BH,4CAAH,qDAgCTU,EAAc,SAAAC,GAClB,GAAIA,EAAEC,OAAOC,UAAUC,SAAS,QAAS,CACvC,IAAMC,EAAWJ,EAAEC,OAAOI,QAAQC,MAClCpC,EAASkC,GACThC,EAASL,EAAOqC,MAQpB,OAJAG,qBAAU,WACRlC,MACC,IAGD,iCACE,qBAAKmC,UAAU,oBACf,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBACEC,IAAM1C,GAAUA,EAAOiB,OA1Dd,iDA2DT0B,IAAI,cACJF,UAAU,aAEZ,oBAAGA,UAAU,aAAb,gBAA8BvC,EAA9B,SACA,mBAAGuC,UAAU,aAAb,SAA2BrC,IAC3B,sBAAKqC,UAAU,cAAf,UACE,wBACEA,UAAU,OACV,aAAW,OACXG,YAAaZ,EAHf,SAIE,cAAC,IAAD,MAEF,wBACES,UAAU,OACV,aAAW,QACXG,YAAaZ,EAHf,SAIE,cAAC,IAAD,MAEF,wBAAQS,UAAU,OAAO,aAAW,MAAMG,YAAaZ,EAAvD,SACE,cAAC,IAAD,MAEF,wBACES,UAAU,OACV,aAAW,SACXG,YAAaZ,EAHf,SAIE,cAAC,IAAD,MAEF,wBACES,UAAU,OACV,aAAW,QACXG,YAAaZ,EAHf,SAIE,cAAC,IAAD,MAEF,wBACES,UAAU,OACV,aAAW,WACXG,YAAaZ,EAHf,SAIE,cAAC,IAAD,SAGJ,wBAAQS,UAAU,MAAMI,KAAK,SAASC,QAASxC,EAA/C,SACGR,EAAY,aAAe,yBCzGxCiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba591797.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  FaEnvelopeOpen,\n  FaUser,\n  FaCalendarTimes,\n  FaMap,\n  FaPhone,\n  FaLock,\n} from 'react-icons/fa';\nconst url = 'https://randomuser.me/api/';\nconst defaultImage = 'https://randomuser.me/api/portraits/men/75.jpg';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [person, setPerson] = useState(null);\n  const [title, setTitle] = useState('name');\n  const [value, setValue] = useState('random person');\n\n  const getPerson = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n\n    const person = data.results[0];\n    const { phone, email } = person;\n    const { large: image } = person.picture;\n    const { password } = person.login;\n    const { first, last } = person.name;\n    const { age } = person.dob;\n    const {\n      street: { number, name },\n      country,\n    } = person.location;\n\n    const newPerson = {\n      image,\n      phone,\n      email,\n      password,\n      age,\n      street: `${number} ${name}, ${country}`,\n      name: `${first} ${last}`,\n    };\n\n    setPerson(newPerson);\n    setIsLoading(false);\n    setTitle('name');\n    setValue(newPerson.name);\n  };\n\n  const handleValue = e => {\n    if (e.target.classList.contains('icon')) {\n      const newValue = e.target.dataset.label;\n      setTitle(newValue);\n      setValue(person[newValue]);\n    }\n  };\n\n  useEffect(() => {\n    getPerson();\n  }, []);\n\n  return (\n    <main>\n      <div className='block bcg-black'></div>\n      <div className='block'>\n        <div className='container'>\n          <img\n            src={(person && person.image) || defaultImage}\n            alt='random user'\n            className='user-img'\n          />\n          <p className='user-title'>my {title} is</p>\n          <p className='user-value'>{value}</p>\n          <div className='values-list'>\n            <button\n              className='icon'\n              data-label='name'\n              onMouseOver={handleValue}>\n              <FaUser />\n            </button>\n            <button\n              className='icon'\n              data-label='email'\n              onMouseOver={handleValue}>\n              <FaEnvelopeOpen />\n            </button>\n            <button className='icon' data-label='age' onMouseOver={handleValue}>\n              <FaCalendarTimes />\n            </button>\n            <button\n              className='icon'\n              data-label='street'\n              onMouseOver={handleValue}>\n              <FaMap />\n            </button>\n            <button\n              className='icon'\n              data-label='phone'\n              onMouseOver={handleValue}>\n              <FaPhone />\n            </button>\n            <button\n              className='icon'\n              data-label='password'\n              onMouseOver={handleValue}>\n              <FaLock />\n            </button>\n          </div>\n          <button className='btn' type='button' onClick={getPerson}>\n            {isLoading ? 'loading...' : 'random user'}\n          </button>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}